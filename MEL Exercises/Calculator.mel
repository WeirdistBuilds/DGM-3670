proc float Add(float $add[])
{
	float $result = 0;
	
	for($i = 0; $i < size($add); $i++)
	{
		$result += $add[$i];
	}
	return $result;
}

proc float Subtract(float $subtract[])
{
	float $result = $subtract[0];
	
	for($i = 1; $i < size($subtract); $i++)
	{
		$result -= $subtract[$i];
	}
	return $result;
}

proc float Multiply(float $multiply[])
{
	float $result = $multiply[0];
	
	for($i = 1; $i < size($multiply); $i++)
	{
		$result *= $multiply[$i];
	}
	return $result;
}

proc float Divide(float $divide[])
{
	float $result = $divide[0];
	
	for($i = 1; $i < size($divide); $i++)
	{
		$result /= $divide[$i];
	}
	return $result;
}

proc float Power(float $power[])
{
	float $result = $power[0];
	float $exp = $power[1];
	
	if($exp == 0)
	{
		return 1;
	}
	else
	{
		$power[0] = $result;
		$power[1] = $exp - 1;
		return $result * Power($power);
	}
}

proc float Mean(float $mean[])
{
	float $result = Add($mean) / size($mean);
	return $result;
}

proc float Median(float $median[])
{
	float $result;
	float $sorted[] = `sort $median`;
	int $midnum = `floor(size($sorted) / 2)`;
	
	if (size($sorted) % 2 == 0)
	{
		$result = ($sorted[$midnum - 1] + $sorted[$midnum]) / 2;
	}
	else
	{
		$result = $sorted[$midnum];
	}
	
	return $result;
}

proc float Mode(float $mode[])
{
	float $sorted[] = `sort $mode`;
	int $checkindex;
	
	for($i = 0; $i < size($sorted); $i++)
	{
		
	}
}

float $nums[] = {1,2,3,4,5};
float $pow[] = {2,3};
Add($nums);
Subtract($nums);
Multiply($nums);
Divide($nums);
Power($pow);
Mean($nums);
Median($nums);